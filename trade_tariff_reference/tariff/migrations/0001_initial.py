# Generated by Django 2.2.2 on 2019-06-28 15:13

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalCodeDescriptionPeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_code_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('additional_code_sid', models.IntegerField(blank=True, null=True)),
                ('additional_code_type_id', models.CharField(blank=True, max_length=1, null=True)),
                ('additional_code', models.CharField(blank=True, max_length=3, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'additional_code_description_periods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdditionalCodeDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_code_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('additional_code_sid', models.IntegerField(blank=True, null=True)),
                ('additional_code_type_id', models.CharField(blank=True, max_length=1, null=True)),
                ('additional_code', models.CharField(blank=True, max_length=3, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'additional_code_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdditionalCodes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_code_sid', models.IntegerField(blank=True, null=True)),
                ('additional_code_type_id', models.CharField(blank=True, max_length=1, null=True)),
                ('additional_code', models.CharField(blank=True, max_length=3, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'additional_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdditionalCodeTypeDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_code_type_id', models.CharField(blank=True, max_length=1, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'additional_code_type_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdditionalCodeTypeMeasureTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_type_id', models.CharField(blank=True, max_length=3, null=True)),
                ('additional_code_type_id', models.CharField(blank=True, max_length=1, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'additional_code_type_measure_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdditionalCodeTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_code_type_id', models.CharField(blank=True, max_length=1, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('application_code', models.CharField(blank=True, max_length=255, null=True)),
                ('meursing_table_plan_id', models.CharField(blank=True, max_length=2, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'additional_code_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllAdditionalCodes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_code_sid', models.IntegerField(blank=True, null=True)),
                ('additional_code_type_id', models.CharField(blank=True, max_length=20, null=True)),
                ('additional_code', models.CharField(blank=True, max_length=3, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('language_id', models.CharField(blank=True, max_length=20, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'all_additional_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseRegulations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_regulation_role', models.IntegerField(blank=True, null=True)),
                ('base_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('community_code', models.IntegerField(blank=True, null=True)),
                ('regulation_group_id', models.CharField(blank=True, max_length=255, null=True)),
                ('replacement_indicator', models.IntegerField(blank=True, null=True)),
                ('stopped_flag', models.BooleanField(blank=True, null=True)),
                ('information_text', models.TextField(blank=True, null=True)),
                ('approved_flag', models.BooleanField(blank=True, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('officialjournal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('officialjournal_page', models.IntegerField(blank=True, null=True)),
                ('effective_end_date', models.DateTimeField(blank=True, null=True)),
                ('antidumping_regulation_role', models.IntegerField(blank=True, null=True)),
                ('related_antidumping_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('complete_abrogation_regulation_role', models.IntegerField(blank=True, null=True)),
                ('complete_abrogation_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('explicit_abrogation_regulation_role', models.IntegerField(blank=True, null=True)),
                ('explicit_abrogation_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_regulations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CertificateDescriptionPeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('certificate_type_code', models.CharField(blank=True, max_length=1, null=True)),
                ('certificate_code', models.CharField(blank=True, max_length=3, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'certificate_description_periods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CertificateDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('certificate_type_code', models.CharField(blank=True, max_length=1, null=True)),
                ('certificate_code', models.CharField(blank=True, max_length=3, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'certificate_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Certificates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_type_code', models.CharField(blank=True, max_length=1, null=True)),
                ('certificate_code', models.CharField(blank=True, max_length=3, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('national_abbrev', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'certificates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CertificateTypeDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_type_code', models.CharField(blank=True, max_length=1, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'certificate_type_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CertificateTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_type_code', models.CharField(blank=True, max_length=1, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'certificate_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompleteAbrogationRegulations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete_abrogation_regulation_role', models.IntegerField(blank=True, null=True)),
                ('complete_abrogation_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('officialjournal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('officialjournal_page', models.IntegerField(blank=True, null=True)),
                ('replacement_indicator', models.IntegerField(blank=True, null=True)),
                ('information_text', models.TextField(blank=True, null=True)),
                ('approved_flag', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'complete_abrogation_regulations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DutyExpressionDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duty_expression_id', models.CharField(blank=True, max_length=255, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'duty_expression_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DutyExpressions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duty_expression_id', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('duty_amount_applicability_code', models.IntegerField(blank=True, null=True)),
                ('measurement_unit_applicability_code', models.IntegerField(blank=True, null=True)),
                ('monetary_unit_applicability_code', models.IntegerField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'duty_expressions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExplicitAbrogationRegulations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('explicit_abrogation_regulation_role', models.IntegerField(blank=True, null=True)),
                ('explicit_abrogation_regulation_id', models.CharField(blank=True, max_length=8, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('officialjournal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('officialjournal_page', models.IntegerField(blank=True, null=True)),
                ('replacement_indicator', models.IntegerField(blank=True, null=True)),
                ('abrogation_date', models.DateField(blank=True, null=True)),
                ('information_text', models.TextField(blank=True, null=True)),
                ('approved_flag', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'explicit_abrogation_regulations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExportRefundNomenclatureDescriptionPeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_refund_nomenclature_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('export_refund_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('additional_code_type', models.TextField(blank=True, null=True)),
                ('export_refund_code', models.CharField(blank=True, max_length=255, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'export_refund_nomenclature_description_periods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExportRefundNomenclatureDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_refund_nomenclature_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('export_refund_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('additional_code_type', models.TextField(blank=True, null=True)),
                ('export_refund_code', models.CharField(blank=True, max_length=255, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'export_refund_nomenclature_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExportRefundNomenclatureIndents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_refund_nomenclature_indents_sid', models.IntegerField(blank=True, null=True)),
                ('export_refund_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('number_export_refund_nomenclature_indents', models.IntegerField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('additional_code_type', models.TextField(blank=True, null=True)),
                ('export_refund_code', models.CharField(blank=True, max_length=255, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'export_refund_nomenclature_indents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExportRefundNomenclatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_refund_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('additional_code_type', models.CharField(blank=True, max_length=1, null=True)),
                ('export_refund_code', models.CharField(blank=True, max_length=3, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('goods_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'export_refund_nomenclatures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FootnoteAssociationAdditionalCodes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_code_sid', models.IntegerField(blank=True, null=True)),
                ('footnote_type_id', models.CharField(blank=True, max_length=2, null=True)),
                ('footnote_id', models.CharField(blank=True, max_length=5, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('additional_code_type_id', models.TextField(blank=True, null=True)),
                ('additional_code', models.CharField(blank=True, max_length=3, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footnote_association_additional_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FootnoteAssociationErns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_refund_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('footnote_type', models.CharField(blank=True, max_length=2, null=True)),
                ('footnote_id', models.CharField(blank=True, max_length=5, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('additional_code_type', models.TextField(blank=True, null=True)),
                ('export_refund_code', models.CharField(blank=True, max_length=255, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footnote_association_erns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FootnoteAssociationGoodsNomenclatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('footnote_type', models.CharField(blank=True, max_length=2, null=True)),
                ('footnote_id', models.CharField(blank=True, max_length=5, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footnote_association_goods_nomenclatures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FootnoteAssociationMeasures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_sid', models.IntegerField(blank=True, null=True)),
                ('footnote_type_id', models.CharField(blank=True, max_length=2, null=True)),
                ('footnote_id', models.CharField(blank=True, max_length=5, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footnote_association_measures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FootnoteAssociationMeursingHeadings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meursing_table_plan_id', models.CharField(blank=True, max_length=2, null=True)),
                ('meursing_heading_number', models.CharField(blank=True, max_length=255, null=True)),
                ('row_column_code', models.IntegerField(blank=True, null=True)),
                ('footnote_type', models.CharField(blank=True, max_length=2, null=True)),
                ('footnote_id', models.CharField(blank=True, max_length=5, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footnote_association_meursing_headings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FootnoteDescriptionPeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('footnote_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('footnote_type_id', models.CharField(blank=True, max_length=2, null=True)),
                ('footnote_id', models.CharField(blank=True, max_length=5, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footnote_description_periods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FootnoteDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('footnote_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('footnote_type_id', models.CharField(blank=True, max_length=2, null=True)),
                ('footnote_id', models.CharField(blank=True, max_length=5, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footnote_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Footnotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('footnote_id', models.CharField(blank=True, max_length=5, null=True)),
                ('footnote_type_id', models.CharField(blank=True, max_length=2, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footnotes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FootnoteTypeDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('footnote_type_id', models.CharField(blank=True, max_length=2, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footnote_type_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FootnoteTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('footnote_type_id', models.CharField(blank=True, max_length=2, null=True)),
                ('application_code', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footnote_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FtsRegulationActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fts_regulation_role', models.IntegerField(blank=True, null=True)),
                ('fts_regulation_id', models.CharField(blank=True, max_length=8, null=True)),
                ('stopped_regulation_role', models.IntegerField(blank=True, null=True)),
                ('stopped_regulation_id', models.CharField(blank=True, max_length=8, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fts_regulation_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FullTemporaryStopRegulations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_temporary_stop_regulation_role', models.IntegerField(blank=True, null=True)),
                ('full_temporary_stop_regulation_id', models.CharField(blank=True, max_length=8, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('officialjournal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('officialjournal_page', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('effective_enddate', models.DateField(blank=True, null=True)),
                ('explicit_abrogation_regulation_role', models.IntegerField(blank=True, null=True)),
                ('explicit_abrogation_regulation_id', models.CharField(blank=True, max_length=8, null=True)),
                ('replacement_indicator', models.IntegerField(blank=True, null=True)),
                ('information_text', models.TextField(blank=True, null=True)),
                ('approved_flag', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('complete_abrogation_regulation_role', models.IntegerField(blank=True, null=True)),
                ('complete_abrogation_regulation_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'full_temporary_stop_regulations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicalAreaDescriptionPeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geographical_area_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('geographical_area_sid', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('geographical_area_id', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geographical_area_description_periods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicalAreaDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geographical_area_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('geographical_area_sid', models.IntegerField(blank=True, null=True)),
                ('geographical_area_id', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geographical_area_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicalAreaMemberships',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geographical_area_sid', models.IntegerField(blank=True, null=True)),
                ('geographical_area_group_sid', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geographical_area_memberships',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicalAreas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geographical_area_sid', models.IntegerField(blank=True, null=True)),
                ('parent_geographical_area_group_sid', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('geographical_code', models.CharField(blank=True, max_length=255, null=True)),
                ('geographical_area_id', models.CharField(blank=True, max_length=255, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geographical_areas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsNomenclatureDescriptionPeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_nomenclature_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('goods_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods_nomenclature_description_periods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsNomenclatureDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_nomenclature_description_period_sid', models.IntegerField(blank=True, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('goods_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods_nomenclature_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsNomenclatureGroupDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_nomenclature_group_type', models.CharField(blank=True, max_length=1, null=True)),
                ('goods_nomenclature_group_id', models.CharField(blank=True, max_length=6, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods_nomenclature_group_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsNomenclatureGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_nomenclature_group_type', models.CharField(blank=True, max_length=1, null=True)),
                ('goods_nomenclature_group_id', models.CharField(blank=True, max_length=6, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('nomenclature_group_facility_code', models.IntegerField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods_nomenclature_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsNomenclatureIndents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_nomenclature_indent_sid', models.IntegerField(blank=True, null=True)),
                ('goods_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('number_indents', models.IntegerField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods_nomenclature_indents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsNomenclatureOrigins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('derived_goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('derived_productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods_nomenclature_origins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsNomenclatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('producline_suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('statistical_indicator', models.IntegerField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods_nomenclatures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsNomenclatureSuccessors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('absorbed_goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('absorbed_productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods_nomenclature_successors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LanguageDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code_id', models.CharField(blank=True, max_length=255, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'language_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'languages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureActionDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_code', models.CharField(blank=True, max_length=255, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_action_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_code', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureComponents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_sid', models.IntegerField(blank=True, null=True)),
                ('duty_expression_id', models.CharField(blank=True, max_length=255, null=True)),
                ('duty_amount', models.FloatField(blank=True, null=True)),
                ('monetary_unit_code', models.CharField(blank=True, max_length=255, null=True)),
                ('measurement_unit_code', models.CharField(blank=True, max_length=3, null=True)),
                ('measurement_unit_qualifier_code', models.CharField(blank=True, max_length=1, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('original_duty_expression_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_components',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureConditionCodeDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_code', models.CharField(blank=True, max_length=255, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_condition_code_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureConditionCodes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_code', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_condition_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureConditionComponents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_condition_sid', models.IntegerField(blank=True, null=True)),
                ('duty_expression_id', models.CharField(blank=True, max_length=255, null=True)),
                ('duty_amount', models.FloatField(blank=True, null=True)),
                ('monetary_unit_code', models.CharField(blank=True, max_length=255, null=True)),
                ('measurement_unit_code', models.CharField(blank=True, max_length=3, null=True)),
                ('measurement_unit_qualifier_code', models.CharField(blank=True, max_length=1, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('original_duty_expression_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_condition_components',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureConditions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_condition_sid', models.IntegerField(blank=True, null=True)),
                ('measure_sid', models.IntegerField(blank=True, null=True)),
                ('condition_code', models.CharField(blank=True, max_length=255, null=True)),
                ('component_sequence_number', models.IntegerField(blank=True, null=True)),
                ('condition_duty_amount', models.FloatField(blank=True, null=True)),
                ('condition_monetary_unit_code', models.CharField(blank=True, max_length=255, null=True)),
                ('condition_measurement_unit_code', models.CharField(blank=True, max_length=3, null=True)),
                ('condition_measurement_unit_qualifier_code', models.CharField(blank=True, max_length=1, null=True)),
                ('action_code', models.CharField(blank=True, max_length=255, null=True)),
                ('certificate_type_code', models.CharField(blank=True, max_length=1, null=True)),
                ('certificate_code', models.CharField(blank=True, max_length=3, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('original_measure_condition_code', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_conditions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureExcludedGeographicalAreas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_sid', models.IntegerField(blank=True, null=True)),
                ('excluded_geographical_area', models.CharField(blank=True, max_length=255, null=True)),
                ('geographical_area_sid', models.IntegerField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_excluded_geographical_areas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Measurements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_unit_code', models.CharField(blank=True, max_length=3, null=True)),
                ('measurement_unit_qualifier_code', models.CharField(blank=True, max_length=1, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measurements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasurementUnitDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_unit_code', models.CharField(blank=True, max_length=3, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measurement_unit_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasurementUnitQualifierDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_unit_qualifier_code', models.CharField(blank=True, max_length=1, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measurement_unit_qualifier_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasurementUnitQualifiers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_unit_qualifier_code', models.CharField(blank=True, max_length=1, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measurement_unit_qualifiers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasurementUnits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_unit_code', models.CharField(blank=True, max_length=3, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measurement_units',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasurePartialTemporaryStops',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_sid', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('partial_temporary_stop_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('partial_temporary_stop_regulation_officialjournal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('partial_temporary_stop_regulation_officialjournal_page', models.IntegerField(blank=True, null=True)),
                ('abrogation_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('abrogation_regulation_officialjournal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('abrogation_regulation_officialjournal_page', models.IntegerField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_partial_temporary_stops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Measures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_sid', models.IntegerField(blank=True, null=True)),
                ('measure_type_id', models.CharField(blank=True, max_length=3, null=True)),
                ('geographical_area_id', models.CharField(blank=True, max_length=255, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('measure_generating_regulation_role', models.IntegerField(blank=True, null=True)),
                ('measure_generating_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('justification_regulation_role', models.IntegerField(blank=True, null=True)),
                ('justification_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stopped_flag', models.BooleanField(blank=True, null=True)),
                ('geographical_area_sid', models.IntegerField(blank=True, null=True)),
                ('goods_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('ordernumber', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_code_type_id', models.TextField(blank=True, null=True)),
                ('additional_code_id', models.CharField(blank=True, max_length=3, null=True)),
                ('additional_code_sid', models.IntegerField(blank=True, null=True)),
                ('reduction_indicator', models.IntegerField(blank=True, null=True)),
                ('export_refund_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('tariff_measure_number', models.CharField(blank=True, max_length=10, null=True)),
                ('invalidated_by', models.IntegerField(blank=True, null=True)),
                ('invalidated_at', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('last_status_change_at', models.DateTimeField(blank=True, null=True)),
                ('last_update_by_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('searchable_data', models.TextField(blank=True, null=True)),
                ('searchable_data_updated_at', models.DateTimeField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('original_measure_sid', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureTypeDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_type_id', models.CharField(blank=True, max_length=3, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_type_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_type_id', models.CharField(blank=True, max_length=3, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('trade_movement_code', models.IntegerField(blank=True, null=True)),
                ('priority_code', models.IntegerField(blank=True, null=True)),
                ('measure_component_applicable_code', models.IntegerField(blank=True, null=True)),
                ('origin_dest_code', models.IntegerField(blank=True, null=True)),
                ('order_number_capture_code', models.IntegerField(blank=True, null=True)),
                ('measure_explosion_level', models.IntegerField(blank=True, null=True)),
                ('measure_type_series_id', models.CharField(blank=True, max_length=255, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('measure_type_acronym', models.CharField(blank=True, max_length=3, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureTypeSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_type_series_id', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('measure_type_combination', models.IntegerField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_type_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeasureTypeSeriesDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_type_series_id', models.CharField(blank=True, max_length=255, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'measure_type_series_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeursingAdditionalCodes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meursing_additional_code_sid', models.IntegerField(blank=True, null=True)),
                ('additional_code', models.CharField(blank=True, max_length=3, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meursing_additional_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeursingHeadings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meursing_table_plan_id', models.CharField(blank=True, max_length=2, null=True)),
                ('meursing_heading_number', models.TextField(blank=True, null=True)),
                ('row_column_code', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meursing_headings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeursingHeadingTexts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meursing_table_plan_id', models.CharField(blank=True, max_length=2, null=True)),
                ('meursing_heading_number', models.IntegerField(blank=True, null=True)),
                ('row_column_code', models.IntegerField(blank=True, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meursing_heading_texts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeursingSubheadings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meursing_table_plan_id', models.CharField(blank=True, max_length=2, null=True)),
                ('meursing_heading_number', models.IntegerField(blank=True, null=True)),
                ('row_column_code', models.IntegerField(blank=True, null=True)),
                ('subheading_sequence_number', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meursing_subheadings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeursingTableCellComponents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meursing_additional_code_sid', models.IntegerField(blank=True, null=True)),
                ('meursing_table_plan_id', models.CharField(blank=True, max_length=2, null=True)),
                ('heading_number', models.IntegerField(blank=True, null=True)),
                ('row_column_code', models.IntegerField(blank=True, null=True)),
                ('subheading_sequence_number', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('additional_code', models.CharField(blank=True, max_length=3, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meursing_table_cell_components',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeursingTablePlans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meursing_table_plan_id', models.CharField(blank=True, max_length=2, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meursing_table_plans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModificationRegulations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modification_regulation_role', models.IntegerField(blank=True, null=True)),
                ('modification_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('officialjournal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('officialjournal_page', models.IntegerField(blank=True, null=True)),
                ('base_regulation_role', models.IntegerField(blank=True, null=True)),
                ('base_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('replacement_indicator', models.IntegerField(blank=True, null=True)),
                ('stopped_flag', models.BooleanField(blank=True, null=True)),
                ('information_text', models.TextField(blank=True, null=True)),
                ('approved_flag', models.BooleanField(blank=True, null=True)),
                ('explicit_abrogation_regulation_role', models.IntegerField(blank=True, null=True)),
                ('explicit_abrogation_regulation_id', models.CharField(blank=True, max_length=8, null=True)),
                ('effective_end_date', models.DateTimeField(blank=True, null=True)),
                ('complete_abrogation_regulation_role', models.IntegerField(blank=True, null=True)),
                ('complete_abrogation_regulation_id', models.CharField(blank=True, max_length=8, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'modification_regulations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MonetaryExchangePeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monetary_exchange_period_sid', models.IntegerField(blank=True, null=True)),
                ('parent_monetary_unit_code', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monetary_exchange_periods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MonetaryExchangeRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monetary_exchange_period_sid', models.IntegerField(blank=True, null=True)),
                ('child_monetary_unit_code', models.CharField(blank=True, max_length=255, null=True)),
                ('exchange_rate', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monetary_exchange_rates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MonetaryUnitDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monetary_unit_code', models.CharField(blank=True, max_length=255, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monetary_unit_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MonetaryUnits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monetary_unit_code', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monetary_units',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NomenclatureGroupMemberships',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_nomenclature_sid', models.IntegerField(blank=True, null=True)),
                ('goods_nomenclature_group_type', models.CharField(blank=True, max_length=1, null=True)),
                ('goods_nomenclature_group_id', models.CharField(blank=True, max_length=6, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('goods_nomenclature_item_id', models.CharField(blank=True, max_length=10, null=True)),
                ('productline_suffix', models.CharField(blank=True, max_length=2, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'nomenclature_group_memberships',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProrogationRegulationActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prorogation_regulation_role', models.IntegerField(blank=True, null=True)),
                ('prorogation_regulation_id', models.CharField(blank=True, max_length=8, null=True)),
                ('prorogated_regulation_role', models.IntegerField(blank=True, null=True)),
                ('prorogated_regulation_id', models.CharField(blank=True, max_length=8, null=True)),
                ('prorogated_date', models.DateField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prorogation_regulation_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProrogationRegulations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prorogation_regulation_role', models.IntegerField(blank=True, null=True)),
                ('prorogation_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('officialjournal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('officialjournal_page', models.IntegerField(blank=True, null=True)),
                ('replacement_indicator', models.IntegerField(blank=True, null=True)),
                ('information_text', models.TextField(blank=True, null=True)),
                ('approved_flag', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prorogation_regulations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationSigles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('code_type_id', models.CharField(blank=True, max_length=4, null=True)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('publication_code', models.CharField(blank=True, max_length=1, null=True)),
                ('publication_sigle', models.CharField(blank=True, max_length=20, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'publication_sigles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaAssociations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('sub_quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('relation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('coefficient', models.DecimalField(blank=True, decimal_places=5, max_digits=16, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_associations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaBalanceEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('occurrence_timestamp', models.DateTimeField(blank=True, null=True)),
                ('last_import_date_in_allocation', models.DateField(blank=True, null=True)),
                ('old_balance', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('new_balance', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('imported_amount', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_balance_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaBlockingPeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_blocking_period_sid', models.IntegerField(blank=True, null=True)),
                ('quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('blocking_start_date', models.DateField(blank=True, null=True)),
                ('blocking_end_date', models.DateField(blank=True, null=True)),
                ('blocking_period_type', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_blocking_periods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaCriticalEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('occurrence_timestamp', models.DateTimeField(blank=True, null=True)),
                ('critical_state', models.CharField(blank=True, max_length=255, null=True)),
                ('critical_state_change_date', models.DateField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_critical_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaDefinitions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('quota_order_number_id', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('quota_order_number_sid', models.IntegerField(blank=True, null=True)),
                ('volume', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('initial_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('measurement_unit_code', models.CharField(blank=True, max_length=3, null=True)),
                ('maximum_precision', models.IntegerField(blank=True, null=True)),
                ('critical_state', models.CharField(blank=True, max_length=255, null=True)),
                ('critical_threshold', models.IntegerField(blank=True, null=True)),
                ('monetary_unit_code', models.CharField(blank=True, max_length=255, null=True)),
                ('measurement_unit_qualifier_code', models.CharField(blank=True, max_length=1, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('workbasket_type_of_quota', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_definitions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaExhaustionEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('occurrence_timestamp', models.DateTimeField(blank=True, null=True)),
                ('exhaustion_date', models.DateField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_exhaustion_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaOrderNumberOriginExclusions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_order_number_origin_sid', models.IntegerField(blank=True, null=True)),
                ('excluded_geographical_area_sid', models.IntegerField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_order_number_origin_exclusions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaOrderNumberOrigins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_order_number_origin_sid', models.IntegerField(blank=True, null=True)),
                ('quota_order_number_sid', models.IntegerField(blank=True, null=True)),
                ('geographical_area_id', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('geographical_area_sid', models.IntegerField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_order_number_origins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaOrderNumbers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_order_number_sid', models.IntegerField(blank=True, null=True)),
                ('quota_order_number_id', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_order_numbers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaReopeningEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('occurrence_timestamp', models.DateTimeField(blank=True, null=True)),
                ('reopening_date', models.DateField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_reopening_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaSuspensionPeriods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_suspension_period_sid', models.IntegerField(blank=True, null=True)),
                ('quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('suspension_start_date', models.DateField(blank=True, null=True)),
                ('suspension_end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_suspension_periods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaUnblockingEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('occurrence_timestamp', models.DateTimeField(blank=True, null=True)),
                ('unblocking_date', models.DateField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_unblocking_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaUnsuspensionEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_definition_sid', models.IntegerField(blank=True, null=True)),
                ('occurrence_timestamp', models.DateTimeField(blank=True, null=True)),
                ('unsuspension_date', models.DateField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quota_unsuspension_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegulationGroupDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regulation_group_id', models.CharField(blank=True, max_length=255, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'regulation_group_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegulationGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regulation_group_id', models.CharField(blank=True, max_length=255, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'regulation_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegulationReplacements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geographical_area_id', models.CharField(blank=True, max_length=255, null=True)),
                ('chapter_heading', models.CharField(blank=True, max_length=255, null=True)),
                ('replacing_regulation_role', models.IntegerField(blank=True, null=True)),
                ('replacing_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('replaced_regulation_role', models.IntegerField(blank=True, null=True)),
                ('replaced_regulation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('measure_type_id', models.CharField(blank=True, max_length=3, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'regulation_replacements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegulationRoleTypeDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regulation_role_type_id', models.CharField(blank=True, max_length=255, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'regulation_role_type_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegulationRoleTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regulation_role_type_id', models.IntegerField(blank=True, null=True)),
                ('validity_start_date', models.DateTimeField(blank=True, null=True)),
                ('validity_end_date', models.DateTimeField(blank=True, null=True)),
                ('national', models.BooleanField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'regulation_role_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegulationsSearchPgView',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('regulation_id', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('officialjournal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('officialjournal_page', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('added_by_id', models.IntegerField(blank=True, null=True)),
                ('regulation_group_id', models.CharField(blank=True, max_length=20, null=True)),
                ('replacement_indicator', models.IntegerField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'regulations_search_pg_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransmissionComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_sid', models.IntegerField(blank=True, null=True)),
                ('language_id', models.CharField(blank=True, max_length=5, null=True)),
                ('comment_text', models.TextField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=1, null=True)),
                ('operation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('workbasket_id', models.IntegerField(blank=True, null=True)),
                ('workbasket_sequence_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transmission_comments',
                'managed': False,
            },
        ),
    ]
