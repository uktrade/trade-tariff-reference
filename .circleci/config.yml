version: 2.1

job_defaults: &job_defaults
  parameters:
    python_image:
      type: string

    postgres_image:
      type: string

    redis_image:
      type: string

    publish_coverage:
      type: boolean
      default: false

  environment:
    DJANGO_SECRET_KEY: test
    DJANGO_SETTINGS_MODULE: config.settings.testing
    DEBUG: True
    POSTGRES_DB: reference
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD:
    POSTGRES_HOST: localhost
    UK_TARIFF_DB: tariff
    UK_TARIFF_USER: postgres
    UK_TARIFF_PASSWORD:
    UK_TARIFF_HOST: localhost
    TARIFF_MANAGEMENT_URL: http://localhost:8000
    OAUTHLIB_INSECURE_TRANSPORT: 1
    AUTHBROKER_URL:
    AUTHBROKER_CLIENT_ID:
    AUTHBROKER_CLIENT_SECRET:
    AWS_ACCESS_KEY_ID:
    AWS_SECRET_ACCESS_KEY:
    AWS_STORAGE_BUCKET_NAME:


  working_directory: ~/app

  docker:
    - image: <<parameters.python_image>>

    - image: <<parameters.postgres_image>>
      environment:
        POSTGRES_DB=reference

    - image: <<parameters.redis_image>>

  steps:
    - checkout

    - restore_cache:
        name: Restore pip cache
        keys:
          - v1-trade-tariff-reference-{{ checksum "Pipfile.lock" }}
          - v1-trade-tariff-reference-
        paths:
          - ~/cache/pip

    - run:
        name: Install pipenv
        command: pip install --user pipenv

    - run:
        name: Check python packages
        command: PIPENV_CACHE_DIR=~/cache/pip python -m pipenv check --system --three

    - run:
        name: Install dependencies
        command: PIPENV_CACHE_DIR=~/cache/pip python -m pipenv install --dev --system --deploy

    - save_cache:
        name: Save pip cache
        key: v1-trade-tariff-reference-{{ checksum "Pipfile.lock" }}
        paths:
          - ~/cache/pip

    - run:
        name: Install node
        command: curl -sL https://deb.nodesource.com/setup_10.x | bash && apt-get install -y nodejs

    - run:
        name: Compile assets
        command: ./scripts/compile_assets.sh

    - run:
        name: Check node packages
        command: npm audit

    - run:
        name: Run flake8
        command: python -m flake8 trade_tariff_reference/

    - run:
        name: Run tests
        command: python -m pytest -p no:sugar --cov=trade_tariff_reference trade_tariff_reference/

    - store_test_results:
        path: test-reports

    - when:
        condition: <<parameters.publish_coverage>>
        steps:
          - run:
              name: Publish coverage
              command: |
                wget -O codecov.sh https://codecov.io/bash
                bash ./codecov.sh -t ${COV_TOKEN}


jobs:
  build:
    <<: *job_defaults

workflows:
  version: 2

  # Current standard environment
  Default build:
    jobs:
      - build:
          publish_coverage: true
          python_image: python:3.7.4
          postgres_image: postgres:11
          redis_image: redis:3.2